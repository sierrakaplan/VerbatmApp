{
 "kind": "discovery#rpcDescription",
 "etag": "\"u_zXkMELIlX4ktyNbM2XKD4vK8E/B4X-8U3jiUZhO2hQgCz7AkpwlgE\"",
 "discoveryVersion": "v1",
 "id": "verbatmApp:v1",
 "name": "verbatmApp",
 "version": "v1",
 "description": "This is an API",
 "ownerDomain": "verbatmbackend.verbatm.myverbatm.com",
 "ownerName": "verbatmbackend.verbatm.myverbatm.com",
 "packagePath": "com.myverbatm.verbatm.backend.apis",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rpc",
 "rootUrl": "https://verbatmapp.appspot.com/_ah/api/",
 "rpcUrl": "https://verbatmapp.appspot.com/_ah/api/rpc",
 "rpcPath": "/_ah/api/rpc",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/userinfo.email": {
     "description": "View your email address"
    }
   }
  }
 },
 "schemas": {
  "Image": {
   "id": "Image",
   "type": "object",
   "properties": {
    "id": {
     "type": "string",
     "format": "int64"
    },
    "indexInPage": {
     "type": "integer",
     "format": "int32"
    },
    "servingUrl": {
     "type": "string"
    },
    "text": {
     "type": "string"
    },
    "textYPosition": {
     "type": "number",
     "format": "float"
    },
    "userKey": {
     "type": "string",
     "format": "int64"
    }
   }
  },
  "ImageCollection": {
   "id": "ImageCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Image"
     }
    }
   }
  },
  "Page": {
   "id": "Page",
   "type": "object",
   "properties": {
    "id": {
     "type": "string",
     "format": "int64"
    },
    "imageIds": {
     "type": "array",
     "items": {
      "type": "string",
      "format": "int64"
     }
    },
    "indexInPOV": {
     "type": "integer",
     "format": "int32"
    },
    "videoIds": {
     "type": "array",
     "items": {
      "type": "string",
      "format": "int64"
     }
    }
   }
  },
  "PageCollection": {
   "id": "PageCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Page"
     }
    }
   }
  },
  "Post": {
   "id": "Post",
   "type": "object",
   "properties": {
    "channelId": {
     "type": "string",
     "format": "int64"
    },
    "dateCreated": {
     "$ref": "Timestamp"
    },
    "id": {
     "type": "string",
     "format": "int64"
    },
    "sharedFromPostId": {
     "type": "string",
     "format": "int64"
    }
   }
  },
  "PostCollection": {
   "id": "PostCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Post"
     }
    }
   }
  },
  "Timestamp": {
   "id": "Timestamp",
   "type": "object",
   "properties": {
    "date": {
     "type": "integer",
     "format": "int32"
    },
    "day": {
     "type": "integer",
     "format": "int32"
    },
    "hours": {
     "type": "integer",
     "format": "int32"
    },
    "minutes": {
     "type": "integer",
     "format": "int32"
    },
    "month": {
     "type": "integer",
     "format": "int32"
    },
    "nanos": {
     "type": "integer",
     "format": "int32"
    },
    "seconds": {
     "type": "integer",
     "format": "int32"
    },
    "time": {
     "type": "string",
     "format": "int64"
    },
    "timezoneOffset": {
     "type": "integer",
     "format": "int32"
    },
    "year": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "UploadURI": {
   "id": "UploadURI",
   "type": "object",
   "properties": {
    "uploadURIString": {
     "type": "string"
    }
   }
  },
  "VerbatmUser": {
   "id": "VerbatmUser",
   "type": "object",
   "properties": {
    "email": {
     "type": "string"
    },
    "id": {
     "type": "string",
     "format": "int64"
    },
    "name": {
     "type": "string"
    },
    "phoneNumber": {
     "type": "string"
    },
    "profileImageUrl": {
     "type": "string"
    }
   }
  },
  "VerbatmUserCollection": {
   "id": "VerbatmUserCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "VerbatmUser"
     }
    }
   }
  },
  "Video": {
   "id": "Video",
   "type": "object",
   "properties": {
    "blobKeyString": {
     "type": "string"
    },
    "id": {
     "type": "string",
     "format": "int64"
    },
    "indexInPage": {
     "type": "integer",
     "format": "int32"
    },
    "text": {
     "type": "string"
    },
    "textYPosition": {
     "type": "number",
     "format": "float"
    },
    "userId": {
     "type": "string",
     "format": "int64"
    }
   }
  },
  "VideoCollection": {
   "id": "VideoCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Video"
     }
    }
   }
  }
 },
 "methods": {
  "verbatmApp.image.getImage": {
   "id": "verbatmApp.image.getImage",
   "allowGet": true,
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "returns": {
    "$ref": "Image"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.image.getUploadURI": {
   "id": "verbatmApp.image.getUploadURI",
   "allowGet": true,
   "returns": {
    "$ref": "UploadURI"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.image.insertImage": {
   "id": "verbatmApp.image.insertImage",
   "parameters": {
    "resource": {
     "$ref": "Image"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "Image"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.image.removeImage": {
   "id": "verbatmApp.image.removeImage",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.image.updateImage": {
   "id": "verbatmApp.image.updateImage",
   "parameters": {
    "resource": {
     "$ref": "Image"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "Image"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.page.getPage": {
   "id": "verbatmApp.page.getPage",
   "allowGet": true,
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "returns": {
    "$ref": "Page"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.page.insertPage": {
   "id": "verbatmApp.page.insertPage",
   "parameters": {
    "resource": {
     "$ref": "Page"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "Page"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.page.removePage": {
   "id": "verbatmApp.page.removePage",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.page.updatePage": {
   "id": "verbatmApp.page.updatePage",
   "parameters": {
    "resource": {
     "$ref": "Page"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "Page"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.post.getImagesInPage": {
   "id": "verbatmApp.post.getImagesInPage",
   "allowGet": true,
   "parameters": {
    "page_id": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "page_id"
   ],
   "returns": {
    "$ref": "ImageCollection"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.post.getPagesInPost": {
   "id": "verbatmApp.post.getPagesInPost",
   "allowGet": true,
   "parameters": {
    "post_id": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "post_id"
   ],
   "returns": {
    "$ref": "PageCollection"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.post.getPostsInChannel": {
   "id": "verbatmApp.post.getPostsInChannel",
   "allowGet": true,
   "parameters": {
    "channel_id": {
     "type": "integer",
     "required": true,
     "format": "int32"
    }
   },
   "parameterOrder": [
    "channel_id"
   ],
   "returns": {
    "$ref": "PostCollection"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.post.getRecentPosts": {
   "id": "verbatmApp.post.getRecentPosts",
   "allowGet": true,
   "parameters": {
    "count": {
     "type": "integer",
     "required": true,
     "format": "int32"
    }
   },
   "parameterOrder": [
    "count"
   ],
   "returns": {
    "$ref": "PostCollection"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.post.getUsersWhoLikePost": {
   "id": "verbatmApp.post.getUsersWhoLikePost",
   "allowGet": true,
   "parameters": {
    "post_id": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "post_id"
   ],
   "returns": {
    "$ref": "VerbatmUserCollection"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.post.getUsersWhoSharedPost": {
   "id": "verbatmApp.post.getUsersWhoSharedPost",
   "allowGet": true,
   "parameters": {
    "post_id": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "post_id"
   ],
   "returns": {
    "$ref": "VerbatmUserCollection"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.post.getVideosInPage": {
   "id": "verbatmApp.post.getVideosInPage",
   "allowGet": true,
   "parameters": {
    "page_id": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "page_id"
   ],
   "returns": {
    "$ref": "VideoCollection"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.post.insertPost": {
   "id": "verbatmApp.post.insertPost",
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.post.userLikedPost": {
   "id": "verbatmApp.post.userLikedPost",
   "parameters": {
    "liked": {
     "type": "boolean",
     "required": true
    },
    "post_id": {
     "type": "string",
     "required": true,
     "format": "int64"
    },
    "user_id": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "liked",
    "post_id",
    "user_id"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.post.userSharedPost": {
   "id": "verbatmApp.post.userSharedPost",
   "parameters": {
    "post_id": {
     "type": "string",
     "required": true,
     "format": "int64"
    },
    "share_type": {
     "type": "string",
     "required": true
    },
    "user_id": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "post_id",
    "share_type",
    "user_id"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.verbatmuser.getUser": {
   "id": "verbatmApp.verbatmuser.getUser",
   "allowGet": true,
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "returns": {
    "$ref": "VerbatmUser"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.verbatmuser.getUserFromEmail": {
   "id": "verbatmApp.verbatmuser.getUserFromEmail",
   "allowGet": true,
   "parameters": {
    "email": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "email"
   ],
   "returns": {
    "$ref": "VerbatmUser"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.verbatmuser.insertUser": {
   "id": "verbatmApp.verbatmuser.insertUser",
   "parameters": {
    "resource": {
     "$ref": "VerbatmUser"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "VerbatmUser"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.verbatmuser.removeUser": {
   "id": "verbatmApp.verbatmuser.removeUser",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.verbatmuser.updateUser": {
   "id": "verbatmApp.verbatmuser.updateUser",
   "parameters": {
    "resource": {
     "$ref": "VerbatmUser"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "VerbatmUser"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.video.getUploadURI": {
   "id": "verbatmApp.video.getUploadURI",
   "allowGet": true,
   "returns": {
    "$ref": "UploadURI"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.video.getVideo": {
   "id": "verbatmApp.video.getVideo",
   "allowGet": true,
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "returns": {
    "$ref": "Video"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.video.insertVideo": {
   "id": "verbatmApp.video.insertVideo",
   "parameters": {
    "resource": {
     "$ref": "Video"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "Video"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.video.removeVideo": {
   "id": "verbatmApp.video.removeVideo",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "verbatmApp.video.updateVideo": {
   "id": "verbatmApp.video.updateVideo",
   "parameters": {
    "resource": {
     "$ref": "Video"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "Video"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  }
 }
}
