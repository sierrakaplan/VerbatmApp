/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2015 Google Inc.
 */

//
//  GTLQueryVerbatmApp.m
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   verbatmApp/v1
// Description:
//   This is an API
// Classes:
//   GTLQueryVerbatmApp (26 custom class methods, 4 custom properties)

#import "GTLQueryVerbatmApp.h"

#import "GTLVerbatmAppImage.h"
#import "GTLVerbatmAppPage.h"
#import "GTLVerbatmAppPageListWrapper.h"
#import "GTLVerbatmAppPOV.h"
#import "GTLVerbatmAppResultsWithCursor.h"
#import "GTLVerbatmAppVerbatmUser.h"
#import "GTLVerbatmAppVideo.h"

@implementation GTLQueryVerbatmApp

@dynamic count, cursorString, fields, identifier;

+ (NSDictionary *)parameterNameMap {
  NSDictionary *map = @{
    @"cursorString" : @"cursor_string",
    @"identifier" : @"id"
  };
  return map;
}

#pragma mark - "blobstore" methods
// These create a GTLQueryVerbatmApp object.

+ (instancetype)queryForBlobstoreUploadImage {
  NSString *methodName = @"verbatmApp.blobstore.uploadImage";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  return query;
}

+ (instancetype)queryForBlobstoreUploadURI {
  NSString *methodName = @"verbatmApp.blobstore.uploadURI";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  return query;
}

#pragma mark - "image" methods
// These create a GTLQueryVerbatmApp object.

+ (instancetype)queryForImageGetImageWithIdentifier:(long long)identifier {
  NSString *methodName = @"verbatmApp.image.getImage";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  query.expectedObjectClass = [GTLVerbatmAppImage class];
  return query;
}

+ (instancetype)queryForImageInsertImageWithObject:(GTLVerbatmAppImage *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"verbatmApp.image.insertImage";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLVerbatmAppImage class];
  return query;
}

+ (instancetype)queryForImageRemoveImageWithIdentifier:(long long)identifier {
  NSString *methodName = @"verbatmApp.image.removeImage";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  return query;
}

+ (instancetype)queryForImageUpdateImageWithObject:(GTLVerbatmAppImage *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"verbatmApp.image.updateImage";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLVerbatmAppImage class];
  return query;
}

#pragma mark - "page" methods
// These create a GTLQueryVerbatmApp object.

+ (instancetype)queryForPageGetPageWithIdentifier:(long long)identifier {
  NSString *methodName = @"verbatmApp.page.getPage";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  query.expectedObjectClass = [GTLVerbatmAppPage class];
  return query;
}

+ (instancetype)queryForPageInsertPageWithObject:(GTLVerbatmAppPage *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"verbatmApp.page.insertPage";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLVerbatmAppPage class];
  return query;
}

+ (instancetype)queryForPageInsertPagesWithObject:(GTLVerbatmAppPageListWrapper *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"verbatmApp.page.insertPages";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLVerbatmAppPageListWrapper class];
  return query;
}

+ (instancetype)queryForPageRemovePageWithIdentifier:(long long)identifier {
  NSString *methodName = @"verbatmApp.page.removePage";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  return query;
}

+ (instancetype)queryForPageUpdatePageWithObject:(GTLVerbatmAppPage *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"verbatmApp.page.updatePage";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLVerbatmAppPage class];
  return query;
}

#pragma mark - "pov" methods
// These create a GTLQueryVerbatmApp object.

+ (instancetype)queryForPovGetPagesFromPOVWithIdentifier:(long long)identifier {
  NSString *methodName = @"verbatmApp.pov.getPagesFromPOV";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  query.expectedObjectClass = [GTLVerbatmAppPageListWrapper class];
  return query;
}

+ (instancetype)queryForPovGetPOVWithIdentifier:(long long)identifier {
  NSString *methodName = @"verbatmApp.pov.getPOV";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  query.expectedObjectClass = [GTLVerbatmAppPOV class];
  return query;
}

+ (instancetype)queryForPovGetRecentPOVsInfoWithCount:(NSInteger)count {
  NSString *methodName = @"verbatmApp.pov.getRecentPOVsInfo";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.count = count;
  query.expectedObjectClass = [GTLVerbatmAppResultsWithCursor class];
  return query;
}

+ (instancetype)queryForPovGetTrendingPOVsInfoWithCount:(NSInteger)count {
  NSString *methodName = @"verbatmApp.pov.getTrendingPOVsInfo";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.count = count;
  query.expectedObjectClass = [GTLVerbatmAppResultsWithCursor class];
  return query;
}

+ (instancetype)queryForPovInsertPOVWithObject:(GTLVerbatmAppPOV *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"verbatmApp.pov.insertPOV";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLVerbatmAppPOV class];
  return query;
}

+ (instancetype)queryForPovRemovePOVWithIdentifier:(long long)identifier {
  NSString *methodName = @"verbatmApp.pov.removePOV";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  return query;
}

+ (instancetype)queryForPovUpdatePOVWithObject:(GTLVerbatmAppPOV *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"verbatmApp.pov.updatePOV";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLVerbatmAppPOV class];
  return query;
}

#pragma mark - "verbatmuser" methods
// These create a GTLQueryVerbatmApp object.

+ (instancetype)queryForVerbatmuserGetUserWithIdentifier:(long long)identifier {
  NSString *methodName = @"verbatmApp.verbatmuser.getUser";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  query.expectedObjectClass = [GTLVerbatmAppVerbatmUser class];
  return query;
}

+ (instancetype)queryForVerbatmuserInsertUserWithObject:(GTLVerbatmAppVerbatmUser *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"verbatmApp.verbatmuser.insertUser";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLVerbatmAppVerbatmUser class];
  return query;
}

+ (instancetype)queryForVerbatmuserRemoveUserWithIdentifier:(long long)identifier {
  NSString *methodName = @"verbatmApp.verbatmuser.removeUser";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  return query;
}

+ (instancetype)queryForVerbatmuserUpdateUserWithObject:(GTLVerbatmAppVerbatmUser *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"verbatmApp.verbatmuser.updateUser";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLVerbatmAppVerbatmUser class];
  return query;
}

#pragma mark - "video" methods
// These create a GTLQueryVerbatmApp object.

+ (instancetype)queryForVideoGetVideoWithIdentifier:(long long)identifier {
  NSString *methodName = @"verbatmApp.video.getVideo";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  query.expectedObjectClass = [GTLVerbatmAppVideo class];
  return query;
}

+ (instancetype)queryForVideoInsertVideoWithObject:(GTLVerbatmAppVideo *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"verbatmApp.video.insertVideo";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLVerbatmAppVideo class];
  return query;
}

+ (instancetype)queryForVideoRemoveVideoWithIdentifier:(long long)identifier {
  NSString *methodName = @"verbatmApp.video.removeVideo";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  return query;
}

+ (instancetype)queryForVideoUpdateVideoWithObject:(GTLVerbatmAppVideo *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"verbatmApp.video.updateVideo";
  GTLQueryVerbatmApp *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLVerbatmAppVideo class];
  return query;
}

@end
